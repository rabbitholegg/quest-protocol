{
  "abi": [
    {
      "inputs": [],
      "name": "AccountBalanceOverflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ArrayLengthsMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC1155ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isApproved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "batchMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isApproved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610d62806100206000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80632eb2c2d6116100665780632eb2c2d61461014d5780634e1273f414610160578063a22cb46514610180578063e985e9c514610193578063f242432a146101bf57600080fd5b8062fdd58e1461009757806301ffc9a7146100d75780630ca83480146101175780630e89341c1461012c575b600080fd5b6100c46100a5366004610865565b679a31110384e0b0c96020526014919091526000908152604090205490565b6040519081526020015b60405180910390f35b6101076100e536600461088f565b6301ffc9a760e09190911c90811463d9b67a26821417630e89341c9091141790565b60405190151581526020016100ce565b61012a610125366004610971565b6101d2565b005b61014061013a3660046109e5565b50606090565b6040516100ce91906109fe565b61012a61015b366004610ada565b6101fe565b61017361016e366004610b95565b61042c565b6040516100ce9190610c01565b61012a61018e366004610c45565b61049c565b6101076101a1366004610c81565b679a31110384e0b0c96020526014919091526000526034600c205490565b61012a6101cd366004610cb4565b6104f2565b6101f98383836040518060400160405280600381526020016203078360ec1b815250610662565b505050565b82851461021357633b800a466000526004601cfd5b8760601b679a31110384e0b0c9178760601b679a31110384e0b0c917816020528160601c99508060601c9850886102525763ea553b346000526004601cfd5b89331461027557336000526034600c205461027557634b6e7f186000526004601cfd5b8660051b60005b8181146102e6578088013584602052818b013560005260406000208054808311156102af5763f4d678b86000526004601cfd5b8290039055602084905260406000208054808301818110156102d9576301336cea6000526004601cfd5b909155505060200161027c565b50505050604051604081528560051b602001604082018160208a03823760408201602084810191909152600587901b01910181601f198801823701819003888a337f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8486a45050610355600090565b1561036a5761036a8888888888888888610782565b863b156104225760405163bc197c81815233602082015288604082015260a060608201528560051b60200160c082018160208a0382378160a00180608085015282820191508660051b602001925082602089038337820160a084015260208401910181601f198601823701819003601b190160208282601c820160008d5af1610402573d156103fd573d6000803e3d6000fd5b600082525b50805163bc197c8160e01b1461042057639c05499b6000526004601cfd5b505b5050505050505050565b606083821461044357633b800a466000526004601cfd5b6040519050818152602081018260051b81810160405260005b81811461049157679a31110384e0b0c98882013560601b1760209081528682013560009081526040902054848301520161045c565b505050949350505050565b8015159050679a31110384e0b0c96020523360145281600052806034600c2055806000528160601b60601c337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160206000a35050565b8560601b679a31110384e0b0c9178560601b679a31110384e0b0c917816020528160601c97508060601c9650866105315763ea553b346000526004601cfd5b87331461055457336000526034600c205461055457634b6e7f186000526004601cfd5b85600052604060002091508154808611156105775763f4d678b86000526004601cfd5b85810383555080602052604060002091508154858101818110156105a3576301336cea6000526004601cfd5b909255505060208390528486337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260406000a4843b1561065a5760405163f23a6e61815233602082015286604082015284606082015283608082015260a080820152816020016020840360c08301376020818360c401601c840160008a5af161063b573d15610636573d6000803e3d6000fd5b600081525b805163f23a6e6160e01b1461065857639c05499b6000526004601cfd5b505b505050505050565b815183511461067957633b800a466000526004601cfd5b8360601b806106905763ea553b346000526004601cfd5b80679a31110384e0b0c917602052835160051b60005b8181146106e957602081019050808501518187015160005260406000208054828101818110156106de576301336cea6000526004601cfd5b909155506106a69050565b505060405160408152845160051b602001604082018181838960045afa503d60400160208401523d81019050855160051b60200191508181838860045afa50823d8201039150508260601c6000337f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8486a4505050610766600090565b50833b1561077c5761077c600085858585610787565b50505050565b610422565b60405163bc197c8181523360208201528560601b60601c604082015260a06060820152835160051b60200160c082018181838860045afa503d60a0018060808501523d82019150855160051b60200192508282848860045afa503d0160a0840152835160200191503d018181818660045afa50601c83013d82010391505060208282601c850160008a5af161082b573d15610826573d6000803e3d6000fd5b600082525b50805163bc197c8160e01b1461065a57639c05499b6000526004601cfd5b80356001600160a01b038116811461086057600080fd5b919050565b6000806040838503121561087857600080fd5b61088183610849565b946020939093013593505050565b6000602082840312156108a157600080fd5b81356001600160e01b0319811681146108b957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126108e757600080fd5b8135602067ffffffffffffffff80831115610904576109046108c0565b8260051b604051601f19603f83011681018181108482111715610929576109296108c0565b60405293845285810183019383810192508785111561094757600080fd5b83870191505b848210156109665781358352918301919083019061094d565b979650505050505050565b60008060006060848603121561098657600080fd5b61098f84610849565b9250602084013567ffffffffffffffff808211156109ac57600080fd5b6109b8878388016108d6565b935060408601359150808211156109ce57600080fd5b506109db868287016108d6565b9150509250925092565b6000602082840312156109f757600080fd5b5035919050565b600060208083528351808285015260005b81811015610a2b57858101830151858201604001528201610a0f565b506000604082860101526040601f19601f8301168501019250505092915050565b60008083601f840112610a5e57600080fd5b50813567ffffffffffffffff811115610a7657600080fd5b6020830191508360208260051b8501011115610a9157600080fd5b9250929050565b60008083601f840112610aaa57600080fd5b50813567ffffffffffffffff811115610ac257600080fd5b602083019150836020828501011115610a9157600080fd5b60008060008060008060008060a0898b031215610af657600080fd5b610aff89610849565b9750610b0d60208a01610849565b9650604089013567ffffffffffffffff80821115610b2a57600080fd5b610b368c838d01610a4c565b909850965060608b0135915080821115610b4f57600080fd5b610b5b8c838d01610a4c565b909650945060808b0135915080821115610b7457600080fd5b50610b818b828c01610a98565b999c989b5096995094979396929594505050565b60008060008060408587031215610bab57600080fd5b843567ffffffffffffffff80821115610bc357600080fd5b610bcf88838901610a4c565b90965094506020870135915080821115610be857600080fd5b50610bf587828801610a4c565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b81811015610c3957835183529284019291840191600101610c1d565b50909695505050505050565b60008060408385031215610c5857600080fd5b610c6183610849565b915060208301358015158114610c7657600080fd5b809150509250929050565b60008060408385031215610c9457600080fd5b610c9d83610849565b9150610cab60208401610849565b90509250929050565b60008060008060008060a08789031215610ccd57600080fd5b610cd687610849565b9550610ce460208801610849565b94506040870135935060608701359250608087013567ffffffffffffffff811115610d0e57600080fd5b610d1a89828a01610a98565b979a969950949750929593949250505056fea264697066735822122085b9c283d6674e10a1ca1b3803a963c9c7ce4596e316b60fc8ca86163a50e8ca64736f6c63430008130033",
    "sourceMap": "114:253:11:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100925760003560e01c80632eb2c2d6116100665780632eb2c2d61461014d5780634e1273f414610160578063a22cb46514610180578063e985e9c514610193578063f242432a146101bf57600080fd5b8062fdd58e1461009757806301ffc9a7146100d75780630ca83480146101175780630e89341c1461012c575b600080fd5b6100c46100a5366004610865565b679a31110384e0b0c96020526014919091526000908152604090205490565b6040519081526020015b60405180910390f35b6101076100e536600461088f565b6301ffc9a760e09190911c90811463d9b67a26821417630e89341c9091141790565b60405190151581526020016100ce565b61012a610125366004610971565b6101d2565b005b61014061013a3660046109e5565b50606090565b6040516100ce91906109fe565b61012a61015b366004610ada565b6101fe565b61017361016e366004610b95565b61042c565b6040516100ce9190610c01565b61012a61018e366004610c45565b61049c565b6101076101a1366004610c81565b679a31110384e0b0c96020526014919091526000526034600c205490565b61012a6101cd366004610cb4565b6104f2565b6101f98383836040518060400160405280600381526020016203078360ec1b815250610662565b505050565b82851461021357633b800a466000526004601cfd5b8760601b679a31110384e0b0c9178760601b679a31110384e0b0c917816020528160601c99508060601c9850886102525763ea553b346000526004601cfd5b89331461027557336000526034600c205461027557634b6e7f186000526004601cfd5b8660051b60005b8181146102e6578088013584602052818b013560005260406000208054808311156102af5763f4d678b86000526004601cfd5b8290039055602084905260406000208054808301818110156102d9576301336cea6000526004601cfd5b909155505060200161027c565b50505050604051604081528560051b602001604082018160208a03823760408201602084810191909152600587901b01910181601f198801823701819003888a337f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8486a45050610355600090565b1561036a5761036a8888888888888888610782565b863b156104225760405163bc197c81815233602082015288604082015260a060608201528560051b60200160c082018160208a0382378160a00180608085015282820191508660051b602001925082602089038337820160a084015260208401910181601f198601823701819003601b190160208282601c820160008d5af1610402573d156103fd573d6000803e3d6000fd5b600082525b50805163bc197c8160e01b1461042057639c05499b6000526004601cfd5b505b5050505050505050565b606083821461044357633b800a466000526004601cfd5b6040519050818152602081018260051b81810160405260005b81811461049157679a31110384e0b0c98882013560601b1760209081528682013560009081526040902054848301520161045c565b505050949350505050565b8015159050679a31110384e0b0c96020523360145281600052806034600c2055806000528160601b60601c337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160206000a35050565b8560601b679a31110384e0b0c9178560601b679a31110384e0b0c917816020528160601c97508060601c9650866105315763ea553b346000526004601cfd5b87331461055457336000526034600c205461055457634b6e7f186000526004601cfd5b85600052604060002091508154808611156105775763f4d678b86000526004601cfd5b85810383555080602052604060002091508154858101818110156105a3576301336cea6000526004601cfd5b909255505060208390528486337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260406000a4843b1561065a5760405163f23a6e61815233602082015286604082015284606082015283608082015260a080820152816020016020840360c08301376020818360c401601c840160008a5af161063b573d15610636573d6000803e3d6000fd5b600081525b805163f23a6e6160e01b1461065857639c05499b6000526004601cfd5b505b505050505050565b815183511461067957633b800a466000526004601cfd5b8360601b806106905763ea553b346000526004601cfd5b80679a31110384e0b0c917602052835160051b60005b8181146106e957602081019050808501518187015160005260406000208054828101818110156106de576301336cea6000526004601cfd5b909155506106a69050565b505060405160408152845160051b602001604082018181838960045afa503d60400160208401523d81019050855160051b60200191508181838860045afa50823d8201039150508260601c6000337f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8486a4505050610766600090565b50833b1561077c5761077c600085858585610787565b50505050565b610422565b60405163bc197c8181523360208201528560601b60601c604082015260a06060820152835160051b60200160c082018181838860045afa503d60a0018060808501523d82019150855160051b60200192508282848860045afa503d0160a0840152835160200191503d018181818660045afa50601c83013d82010391505060208282601c850160008a5af161082b573d15610826573d6000803e3d6000fd5b600082525b50805163bc197c8160e01b1461065a57639c05499b6000526004601cfd5b80356001600160a01b038116811461086057600080fd5b919050565b6000806040838503121561087857600080fd5b61088183610849565b946020939093013593505050565b6000602082840312156108a157600080fd5b81356001600160e01b0319811681146108b957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126108e757600080fd5b8135602067ffffffffffffffff80831115610904576109046108c0565b8260051b604051601f19603f83011681018181108482111715610929576109296108c0565b60405293845285810183019383810192508785111561094757600080fd5b83870191505b848210156109665781358352918301919083019061094d565b979650505050505050565b60008060006060848603121561098657600080fd5b61098f84610849565b9250602084013567ffffffffffffffff808211156109ac57600080fd5b6109b8878388016108d6565b935060408601359150808211156109ce57600080fd5b506109db868287016108d6565b9150509250925092565b6000602082840312156109f757600080fd5b5035919050565b600060208083528351808285015260005b81811015610a2b57858101830151858201604001528201610a0f565b506000604082860101526040601f19601f8301168501019250505092915050565b60008083601f840112610a5e57600080fd5b50813567ffffffffffffffff811115610a7657600080fd5b6020830191508360208260051b8501011115610a9157600080fd5b9250929050565b60008083601f840112610aaa57600080fd5b50813567ffffffffffffffff811115610ac257600080fd5b602083019150836020828501011115610a9157600080fd5b60008060008060008060008060a0898b031215610af657600080fd5b610aff89610849565b9750610b0d60208a01610849565b9650604089013567ffffffffffffffff80821115610b2a57600080fd5b610b368c838d01610a4c565b909850965060608b0135915080821115610b4f57600080fd5b610b5b8c838d01610a4c565b909650945060808b0135915080821115610b7457600080fd5b50610b818b828c01610a98565b999c989b5096995094979396929594505050565b60008060008060408587031215610bab57600080fd5b843567ffffffffffffffff80821115610bc357600080fd5b610bcf88838901610a4c565b90965094506020870135915080821115610be857600080fd5b50610bf587828801610a4c565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b81811015610c3957835183529284019291840191600101610c1d565b50909695505050505050565b60008060408385031215610c5857600080fd5b610c6183610849565b915060208301358015158114610c7657600080fd5b809150509250929050565b60008060408385031215610c9457600080fd5b610c9d83610849565b9150610cab60208401610849565b90509250929050565b60008060008060008060a08789031215610ccd57600080fd5b610cd687610849565b9550610ce460208801610849565b94506040870135935060608701359250608087013567ffffffffffffffff811115610d0e57600080fd5b610d1a89828a01610a98565b979a969950949750929593949250505056fea264697066735822122085b9c283d6674e10a1ca1b3803a963c9c7ce4596e316b60fc8ca86163a50e8ca64736f6c63430008130033",
    "sourceMap": "114:253:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5602:334:85;;;;;;:::i;:::-;5782:25;5776:4;5769:39;5828:4;5821:19;;;;5677:14;5853:16;;;5914:4;5898:21;;5892:28;;5602:334;;;;597:25:92;;;585:2;570:18;5602:334:85;;;;;;;;19583:385;;;;;;:::i;:::-;19901:10;19761:3;19757:21;;;;19895:17;;;19920:10;19914:17;;19892:40;19940:10;19934:17;;;19889:63;;19583:385;;;;1089:14:92;;1082:22;1064:41;;1052:2;1037:18;19583:385:85;924:187:92;233:132:11;;;;;;:::i;:::-;;:::i;:::-;;152:77;;;;;;:::i;:::-;-1:-1:-1;212:13:11;;152:77;;;;;;;;:::i;12322:5866:85:-;;;;;;:::i;:::-;;:::i;18335:1039::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6552:720::-;;;;;;:::i;:::-;;:::i;6027:386::-;;;;;;:::i;:::-;6253:25;6247:4;6240:39;6299:4;6292:19;;;;6147:11;6324:22;6391:4;-1:-1:-1;6375:21:85;6369:28;;6027:386;7751:4023;;;;;;:::i;:::-;;:::i;233:132:11:-;325:35;336:2;340:3;345:7;325:35;;;;;;;;;;;;;-1:-1:-1;;;325:35:11;;;:10;:35::i;:::-;233:132;;;:::o;12322:5866:85:-;12729:14;12717:10;12714:30;12704:162;;12777:10;12771:4;12764:24;12847:4;12841;12834:18;12704:162;12937:4;12933:2;12929:13;12902:25;12899:44;13012:2;13008;13004:11;12977:25;12974:42;13042:12;13036:4;13029:26;13124:12;13120:2;13116:21;13108:29;;13164:10;13160:2;13156:19;13150:25;;13249:2;13239:135;;13284:10;13278:4;13271:24;13355:4;13349;13342:18;13239:135;13482:4;13472:8;13469:18;13459:272;;13520:8;13514:4;13507:22;13578:4;13572;13562:21;13556:28;13546:171;;13621:10;13615:4;13608:24;13694:4;13688;13681:18;13546:171;13847:10;13844:1;13840:18;13890:1;13875:1463;13907:3;13904:1;13901:10;13875:1463;;14004:1;13988:14;13984:22;13971:36;14140:12;14134:4;14127:26;14220:1;14208:10;14204:18;14191:32;14185:4;14178:46;14288:4;14282;14272:21;14343:15;14337:22;14398:11;14390:6;14387:23;14384:182;;;14454:10;14448:4;14441:24;14535:4;14529;14522:18;14384:182;14615:24;;;14591:49;;14787:4;14780:24;;;14866:4;14860;14850:21;14919:20;;14986:28;;;15042:35;;;15039:197;;;15121:10;15115:4;15108:24;15205:4;15199;15192:18;15039:197;15261:37;;;-1:-1:-1;;13927:4:85;13920:12;13875:1463;;;13879:14;;13811:1541;;15443:4;15437:11;15510:4;15507:1;15500:15;15558:10;15555:1;15551:18;15545:4;15541:29;15603:4;15600:1;15596:12;15664:1;15657:4;15645:10;15641:21;15638:1;15625:41;15747:4;15743:12;;15736:4;15729:12;;;15722:34;;;;15823:1;15819:22;;;15809:33;;15778:9;15809:33;-1:-1:-1;;15875:25:85;;15778:9;15859:45;15930:9;15926:17;;;16052:2;16046:4;16036:8;16003:31;15926:17;15941:1;15992:63;;;16092:24;41750:4;41684:101;;16092:24;16088:112;;;16132:57;16160:4;16166:2;16170:3;;16175:7;;16184:4;;16132:27;:57::i;:::-;16372:2;16360:15;16357:1815;;;16409:4;16403:11;16570:10;16567:1;16560:21;16619:8;16612:4;16609:1;16605:12;16598:30;16666:4;16659;16656:1;16652:12;16645:26;16744:4;16737;16734:1;16730:12;16723:26;16792:10;16789:1;16785:18;16779:4;16775:29;16837:4;16834:1;16830:12;16898:1;16891:4;16879:10;16875:21;16872:1;16859:41;16975:1;16969:4;16965:12;17015:1;17008:4;17005:1;17001:12;16994:23;17046:1;17043;17039:9;17034:14;;17087;17084:1;17080:22;17074:4;17070:33;17065:38;;17163:1;17156:4;17140:14;17136:25;17133:1;17120:45;17239:9;;17232:4;17225:12;;17218:31;17306:4;17302:22;;;17271:9;17302:22;-1:-1:-1;;17357:22:85;;17271:9;17341:42;17409:9;17405:28;;;-1:-1:-1;;17405:28:85;17546:4;17405:28;;17427:4;17420:12;;17523:1;17519:2;17512:5;17507:44;17497:365;;17578:16;17575:236;;;17717:16;17711:4;17705;17690:44;17772:16;17766:4;17759:30;17575:236;17842:1;17839;17832:12;17497:365;-1:-1:-1;17974:8:85;;-1:-1:-1;;;17971:34:85;17961:197;;18042:10;18036:4;18029:24;18135:4;18129;18122:18;17961:197;;16357:1815;12322:5866;;;;;;;;:::o;18335:1039::-;18471:25;18603:13;18591:10;18588:29;18578:161;;18650:10;18644:4;18637:24;18720:4;18714;18707:18;18578:161;18770:4;18764:11;18752:23;;18805:10;18795:8;18788:28;18852:4;18842:8;18838:19;18888:10;18885:1;18881:18;18934:1;18929:3;18925:11;18919:4;18912:25;19030:1;19015:343;19047:3;19044:1;19041:10;19015:343;;19174:25;19119:21;;;19106:35;19205:2;19201:14;19171:45;19165:4;19158:59;;;19260:18;;;19247:32;19241:4;19234:46;;;19337:4;19321:21;;19315:28;19304:9;;;19297:47;19060:12;19015:343;;;19019:14;;;18335:1039;;;;;;:::o;6552:720::-;6767:10;6760:18;6753:26;6739:40;;6876:25;6870:4;6863:39;6928:8;6922:4;6915:22;6963:8;6957:4;6950:22;7015:10;7008:4;7002;6992:21;6985:41;7100:10;7094:4;7087:24;7245:8;7241:2;7237:17;7233:2;7229:26;7219:8;7184:33;7178:4;7172;7167:89;6552:720;;:::o;7751:4023::-;8178:4;8174:2;8170:13;8143:25;8140:44;8253:2;8249;8245:11;8218:25;8215:42;8283:12;8277:4;8270:26;8365:12;8361:2;8357:21;8349:29;;8405:10;8401:2;8397:19;8391:25;;8490:2;8480:135;;8525:10;8519:4;8512:24;8596:4;8590;8583:18;8480:135;8723:4;8713:8;8710:18;8700:272;;8761:8;8755:4;8748:22;8819:4;8813;8803:21;8797:28;8787:171;;8862:10;8856:4;8849:24;8935:4;8929;8922:18;8787:171;9081:2;9075:4;9068:16;9140:4;9134;9124:21;9101:44;;9187:15;9181:22;9234:11;9226:6;9223:23;9220:158;;;9282:10;9276:4;9269:24;9355:4;9349;9342:18;9220:158;9436:6;9423:11;9419:24;9402:15;9395:49;;9565:10;9559:4;9552:24;9630:4;9624;9614:21;9593:42;;9681:13;9675:20;9755:6;9738:15;9734:28;9801:15;9785:14;9782:35;9779:173;;;9853:10;9847:4;9840:24;9929:4;9923;9916:18;9779:173;9969:37;;;-1:-1:-1;;10086:4:85;10079:20;;;10179:2;10173:4;10163:8;10129:32;10123:4;10117;10112:70;10488:2;10476:15;10473:1285;;;10566:4;10560:11;10677:10;10674:1;10667:21;10726:8;10719:4;10716:1;10712:12;10705:30;10773:4;10766;10763:1;10759:12;10752:26;10816:2;10809:4;10806:1;10802:12;10795:24;10857:6;10850:4;10847:1;10843:12;10836:28;10902:4;10895;10892:1;10888:12;10881:26;10985:11;10979:4;10975:22;10968:4;10955:11;10951:22;10944:4;10941:1;10937:12;10924:74;11132:4;11129:1;11115:11;11109:4;11105:22;11098:4;11095:1;11091:12;11088:1;11084:2;11077:5;11072:65;11062:386;;11164:16;11161:236;;;11303:16;11297:4;11291;11276:44;11358:16;11352:4;11345:30;11161:236;11428:1;11425;11418:12;11062:386;11560:8;;-1:-1:-1;;;11557:34:85;11547:197;;11628:10;11622:4;11615:24;11721:4;11715;11708:18;11547:197;;10473:1285;7751:4023;;;;;;:::o;22539:2784::-;22921:7;22915:14;22909:3;22903:10;22900:30;22890:162;;22963:10;22957:4;22950:24;23033:4;23027;23020:18;22890:162;23084:2;23080;23076:11;23161:3;23151:136;;23197:10;23191:4;23184:24;23268:4;23262;23255:18;23151:136;23428:3;23401:25;23398:34;23392:4;23385:48;23474:3;23468:10;23465:1;23461:18;23511:1;23496:821;23528:3;23525:1;23522:10;23496:821;;23571:4;23568:1;23564:12;23559:17;;23630:1;23621:7;23617:15;23611:22;23779:1;23774:3;23770:11;23764:18;23758:4;23751:32;23845:4;23839;23829:21;23904:13;23898:20;23986:6;23969:15;23965:28;24040:15;24024:14;24021:35;24018:197;;;24100:10;24094:4;24087:24;24184:4;24178;24171:18;24018:197;24240:37;;;-1:-1:-1;23496:821:85;;-1:-1:-1;23496:821:85;;23500:14;;24422:4;24416:11;24489:4;24486:1;24479:15;24543:3;24537:10;24534:1;24530:18;24524:4;24520:29;24582:4;24579:1;24575:12;24640:1;24637;24634;24629:3;24626:1;24619:5;24608:34;24604:39;24730:16;24724:4;24720:27;24713:4;24710:1;24706:12;24699:49;24777:16;24774:1;24770:24;24765:29;;24839:7;24833:14;24830:1;24826:22;24820:4;24816:33;24811:38;;24906:1;24903;24900;24891:7;24888:1;24881:5;24870:38;24866:43;24961:1;24942:16;24939:1;24935:24;24931:32;24926:37;;;25077:3;25073:2;25069:12;25066:1;25056:8;25023:31;25020:1;25017;25012:70;;;24389:707;25119:24;41750:4;41684:101;;25119:24;25115:110;43954:14;;25234:82;;;25252:64;25289:1;25293:2;25297:3;25302:7;25311:4;25252:28;:64::i;:::-;22539:2784;;;;:::o;43427:310::-;43627:104;;45811:1984;46124:4;46118:11;46236:10;46233:1;46226:21;46281:8;46274:4;46271:1;46267:12;46260:30;46340:4;46336:2;46332:13;46328:2;46324:22;46317:4;46314:1;46310:12;46303:44;46412:4;46405;46402:1;46398:12;46391:26;46462:3;46456:10;46453:1;46449:18;46443:4;46439:29;46497:4;46494:1;46490:12;46551:1;46548;46545;46540:3;46537:1;46530:5;46519:34;46515:39;46621:16;46615:4;46611:27;46672:1;46665:4;46662:1;46658:12;46651:23;46699:16;46696:1;46692:24;46687:29;;46757:7;46751:14;46748:1;46744:22;46738:4;46734:33;46729:38;;46820:1;46817;46814;46805:7;46802:1;46795:5;46784:38;-1:-1:-1;46896:16:85;46889:24;46882:4;46875:12;;46868:46;46984:11;;46978:4;46974:22;;-1:-1:-1;46939:16:85;46932:24;46974:22;46932:24;46974:22;46990:4;47031:1;47024:5;47013:35;47009:40;47104:4;47101:1;47097:12;47078:16;47075:1;47071:24;47067:43;47062:48;;;47215:4;47212:1;47209;47202:4;47199:1;47195:12;47192:1;47188:2;47181:5;47176:44;47166:337;;47243:16;47240:220;;;47374:16;47368:4;47362;47347:44;47425:16;47419:4;47412:30;47240:220;47487:1;47484;47477:12;47166:337;-1:-1:-1;47607:8:85;;-1:-1:-1;;;47604:34:85;47594:185;;47671:10;47665:4;47658:24;47760:4;47754;47747:18;14:173:92;82:20;;-1:-1:-1;;;;;131:31:92;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:92:o;633:286::-;691:6;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;786:23;;-1:-1:-1;;;;;;838:32:92;;828:43;;818:71;;885:1;882;875:12;818:71;908:5;633:286;-1:-1:-1;;;633:286:92:o;1116:127::-;1177:10;1172:3;1168:20;1165:1;1158:31;1208:4;1205:1;1198:15;1232:4;1229:1;1222:15;1248:902;1302:5;1355:3;1348:4;1340:6;1336:17;1332:27;1322:55;;1373:1;1370;1363:12;1322:55;1409:6;1396:20;1435:4;1458:18;1495:2;1491;1488:10;1485:36;;;1501:18;;:::i;:::-;1547:2;1544:1;1540:10;1579:2;1573:9;1642:2;1638:7;1633:2;1629;1625:11;1621:25;1613:6;1609:38;1697:6;1685:10;1682:22;1677:2;1665:10;1662:18;1659:46;1656:72;;;1708:18;;:::i;:::-;1744:2;1737:22;1794:18;;;1870:15;;;1866:24;;;1828:15;;;;-1:-1:-1;1902:15:92;;;1899:35;;;1930:1;1927;1920:12;1899:35;1966:2;1958:6;1954:15;1943:26;;1978:142;1994:6;1989:3;1986:15;1978:142;;;2060:17;;2048:30;;2098:12;;;;2011;;;;1978:142;;;2138:6;1248:902;-1:-1:-1;;;;;;;1248:902:92:o;2155:669::-;2282:6;2290;2298;2351:2;2339:9;2330:7;2326:23;2322:32;2319:52;;;2367:1;2364;2357:12;2319:52;2390:29;2409:9;2390:29;:::i;:::-;2380:39;;2470:2;2459:9;2455:18;2442:32;2493:18;2534:2;2526:6;2523:14;2520:34;;;2550:1;2547;2540:12;2520:34;2573:61;2626:7;2617:6;2606:9;2602:22;2573:61;:::i;:::-;2563:71;;2687:2;2676:9;2672:18;2659:32;2643:48;;2716:2;2706:8;2703:16;2700:36;;;2732:1;2729;2722:12;2700:36;;2755:63;2810:7;2799:8;2788:9;2784:24;2755:63;:::i;:::-;2745:73;;;2155:669;;;;;:::o;2829:180::-;2888:6;2941:2;2929:9;2920:7;2916:23;2912:32;2909:52;;;2957:1;2954;2947:12;2909:52;-1:-1:-1;2980:23:92;;2829:180;-1:-1:-1;2829:180:92:o;3014:548::-;3126:4;3155:2;3184;3173:9;3166:21;3216:6;3210:13;3259:6;3254:2;3243:9;3239:18;3232:34;3284:1;3294:140;3308:6;3305:1;3302:13;3294:140;;;3403:14;;;3399:23;;3393:30;3369:17;;;3388:2;3365:26;3358:66;3323:10;;3294:140;;;3298:3;3483:1;3478:2;3469:6;3458:9;3454:22;3450:31;3443:42;3553:2;3546;3542:7;3537:2;3529:6;3525:15;3521:29;3510:9;3506:45;3502:54;3494:62;;;;3014:548;;;;:::o;3567:367::-;3630:8;3640:6;3694:3;3687:4;3679:6;3675:17;3671:27;3661:55;;3712:1;3709;3702:12;3661:55;-1:-1:-1;3735:20:92;;3778:18;3767:30;;3764:50;;;3810:1;3807;3800:12;3764:50;3847:4;3839:6;3835:17;3823:29;;3907:3;3900:4;3890:6;3887:1;3883:14;3875:6;3871:27;3867:38;3864:47;3861:67;;;3924:1;3921;3914:12;3861:67;3567:367;;;;;:::o;3939:347::-;3990:8;4000:6;4054:3;4047:4;4039:6;4035:17;4031:27;4021:55;;4072:1;4069;4062:12;4021:55;-1:-1:-1;4095:20:92;;4138:18;4127:30;;4124:50;;;4170:1;4167;4160:12;4124:50;4207:4;4199:6;4195:17;4183:29;;4259:3;4252:4;4243:6;4235;4231:19;4227:30;4224:39;4221:59;;;4276:1;4273;4266:12;4291:1210;4451:6;4459;4467;4475;4483;4491;4499;4507;4560:3;4548:9;4539:7;4535:23;4531:33;4528:53;;;4577:1;4574;4567:12;4528:53;4600:29;4619:9;4600:29;:::i;:::-;4590:39;;4648:38;4682:2;4671:9;4667:18;4648:38;:::i;:::-;4638:48;;4737:2;4726:9;4722:18;4709:32;4760:18;4801:2;4793:6;4790:14;4787:34;;;4817:1;4814;4807:12;4787:34;4856:70;4918:7;4909:6;4898:9;4894:22;4856:70;:::i;:::-;4945:8;;-1:-1:-1;4830:96:92;-1:-1:-1;5033:2:92;5018:18;;5005:32;;-1:-1:-1;5049:16:92;;;5046:36;;;5078:1;5075;5068:12;5046:36;5117:72;5181:7;5170:8;5159:9;5155:24;5117:72;:::i;:::-;5208:8;;-1:-1:-1;5091:98:92;-1:-1:-1;5296:3:92;5281:19;;5268:33;;-1:-1:-1;5313:16:92;;;5310:36;;;5342:1;5339;5332:12;5310:36;;5381:60;5433:7;5422:8;5411:9;5407:24;5381:60;:::i;:::-;4291:1210;;;;-1:-1:-1;4291:1210:92;;-1:-1:-1;4291:1210:92;;;;;;5460:8;-1:-1:-1;;;4291:1210:92:o;5506:773::-;5628:6;5636;5644;5652;5705:2;5693:9;5684:7;5680:23;5676:32;5673:52;;;5721:1;5718;5711:12;5673:52;5761:9;5748:23;5790:18;5831:2;5823:6;5820:14;5817:34;;;5847:1;5844;5837:12;5817:34;5886:70;5948:7;5939:6;5928:9;5924:22;5886:70;:::i;:::-;5975:8;;-1:-1:-1;5860:96:92;-1:-1:-1;6063:2:92;6048:18;;6035:32;;-1:-1:-1;6079:16:92;;;6076:36;;;6108:1;6105;6098:12;6076:36;;6147:72;6211:7;6200:8;6189:9;6185:24;6147:72;:::i;:::-;5506:773;;;;-1:-1:-1;6238:8:92;-1:-1:-1;;;;5506:773:92:o;6284:632::-;6455:2;6507:21;;;6577:13;;6480:18;;;6599:22;;;6426:4;;6455:2;6678:15;;;;6652:2;6637:18;;;6426:4;6721:169;6735:6;6732:1;6729:13;6721:169;;;6796:13;;6784:26;;6865:15;;;;6830:12;;;;6757:1;6750:9;6721:169;;;-1:-1:-1;6907:3:92;;6284:632;-1:-1:-1;;;;;;6284:632:92:o;6921:347::-;6986:6;6994;7047:2;7035:9;7026:7;7022:23;7018:32;7015:52;;;7063:1;7060;7053:12;7015:52;7086:29;7105:9;7086:29;:::i;:::-;7076:39;;7165:2;7154:9;7150:18;7137:32;7212:5;7205:13;7198:21;7191:5;7188:32;7178:60;;7234:1;7231;7224:12;7178:60;7257:5;7247:15;;;6921:347;;;;;:::o;7273:260::-;7341:6;7349;7402:2;7390:9;7381:7;7377:23;7373:32;7370:52;;;7418:1;7415;7408:12;7370:52;7441:29;7460:9;7441:29;:::i;:::-;7431:39;;7489:38;7523:2;7512:9;7508:18;7489:38;:::i;:::-;7479:48;;7273:260;;;;;:::o;7538:695::-;7644:6;7652;7660;7668;7676;7684;7737:3;7725:9;7716:7;7712:23;7708:33;7705:53;;;7754:1;7751;7744:12;7705:53;7777:29;7796:9;7777:29;:::i;:::-;7767:39;;7825:38;7859:2;7848:9;7844:18;7825:38;:::i;:::-;7815:48;;7910:2;7899:9;7895:18;7882:32;7872:42;;7961:2;7950:9;7946:18;7933:32;7923:42;;8016:3;8005:9;8001:19;7988:33;8044:18;8036:6;8033:30;8030:50;;;8076:1;8073;8066:12;8030:50;8115:58;8165:7;8156:6;8145:9;8141:22;8115:58;:::i;:::-;7538:695;;;;-1:-1:-1;7538:695:92;;-1:-1:-1;7538:695:92;;8192:8;;7538:695;-1:-1:-1;;;7538:695:92:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "batchMint(address,uint256[],uint256[])": "0ca83480",
    "isApprovedForAll(address,address)": "e985e9c5",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "uri(uint256)": "0e89341c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccountBalanceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArrayLengthsMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC1155ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccountBalanceOverflow()\":[{\"details\":\"The recipient's balance has overflowed.\"}],\"ArrayLengthsMismatch()\":[{\"details\":\"The lengths of the input arrays are not the same.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"NotOwnerNorApproved()\":[{\"details\":\"Only the token owner or an approved account can manage the tokens.\"}],\"TransferToNonERC1155ReceiverImplementer()\":[{\"details\":\"Cannot safely transfer to a contract that does not implement the ERC1155Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"details\":\"Cannot mint or transfer to the zero address.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables `operator` to manage all of their tokens.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Emitted when `amounts` of token `ids` are transferred from `from` to `to` by `operator`.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `amount` of token `id` is transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the Uniform Resource Identifier (URI) for token `id` is updated to `value`. This event is not used in the base contract. You may need to emit this event depending on your URI logic. See: https://eips.ethereum.org/EIPS/eip-1155#metadata\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of `id` owned by `owner`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Returns the amounts of `ids` for `owners. Requirements: - `owners` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns whether `operator` is approved to manage the tokens of `owner`.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `amounts` of `ids` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - `ids` and `amounts` must have the same length. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155BatchReveived}, which is called upon a batch transfer. Emits a {TransferBatch} event.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` of `id` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155Reveived}, which is called upon a batch transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets whether `operator` is approved to manage the tokens of the caller. Emits a {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See: https://eips.ethereum.org/EIPS/eip-165 This function call must use less than 30000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/SampleERC1155.sol\":\"SampleERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/math/=lib/prb-math/src/\",\":@sablier/v2-core/=lib/v2-core/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v2-core/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v2-core/lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":solarray/=lib/v2-core/lib/solarray/src/\",\":solmate/=node_modules/solmate/\",\":v2-core/=lib/v2-core/\",\"lib/prb-math:@prb/test/=lib/prb-math/lib/prb-test/src/\",\"lib/v2-core:@openzeppelin/contracts/=lib/v2-core/lib/openzeppelin-contracts/contracts/\",\"lib/v2-core:openzeppelin/=lib/v2-core/lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"contracts/test/SampleERC1155.sol\":{\"keccak256\":\"0x76d3d99c7c2b0c1bb8e117fd3c34ac5d0025567e0b8a42c77966dedd1a5fc338\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc9394e8ed2a362a1d394df4c7f5cf46b94717e18471f430a75a71cba51cdc6\",\"dweb:/ipfs/QmbNntyRj6WPDNvwpLgj4XUVeissDqPRcPTyn4FSFcFNWo\"]},\"node_modules/solady/src/tokens/ERC1155.sol\":{\"keccak256\":\"0xc5b0ef62652f917d837aa60462e871d9e22077e5f69bbd63bec1b2eeffbba9a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23ad1a7e43e9c2778d155fcaa6a78bda13532a2dd7aad21936e4298d13732f78\",\"dweb:/ipfs/QmaHEndxhCNa6pD2nosU4GND7Bh9hhA6Painb9DM1mrRm9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AccountBalanceOverflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ArrayLengthsMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC1155ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isApproved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "result",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "balances",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "result",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isApproved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "result",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOf(address,uint256)": {
            "details": "Returns the amount of `id` owned by `owner`."
          },
          "balanceOfBatch(address[],uint256[])": {
            "details": "Returns the amounts of `ids` for `owners. Requirements: - `owners` and `ids` must have the same length."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns whether `operator` is approved to manage the tokens of `owner`."
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "Transfers `amounts` of `ids` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - `ids` and `amounts` must have the same length. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155BatchReveived}, which is called upon a batch transfer. Emits a {TransferBatch} event."
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "details": "Transfers `amount` of `id` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `from` must have at least `amount` of `id`. - If the caller is not `from`,   it must be approved to manage the tokens of `from`. - If `to` refers to a smart contract, it must implement   {ERC1155-onERC1155Reveived}, which is called upon a batch transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Sets whether `operator` is approved to manage the tokens of the caller. Emits a {ApprovalForAll} event."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See: https://eips.ethereum.org/EIPS/eip-165 This function call must use less than 30000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/math/=lib/prb-math/src/",
        "@sablier/v2-core/=lib/v2-core/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/v2-core/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts/=lib/v2-core/lib/openzeppelin-contracts/",
        "prb-math/=lib/prb-math/src/",
        "prb-test/=lib/prb-math/lib/prb-test/src/",
        "solady/=node_modules/solady/",
        "solarray/=lib/v2-core/lib/solarray/src/",
        "solmate/=node_modules/solmate/",
        "v2-core/=lib/v2-core/",
        "lib/prb-math:@prb/test/=lib/prb-math/lib/prb-test/src/",
        "lib/v2-core:@openzeppelin/contracts/=lib/v2-core/lib/openzeppelin-contracts/contracts/",
        "lib/v2-core:openzeppelin/=lib/v2-core/lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/test/SampleERC1155.sol": "SampleERC1155"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/test/SampleERC1155.sol": {
        "keccak256": "0x76d3d99c7c2b0c1bb8e117fd3c34ac5d0025567e0b8a42c77966dedd1a5fc338",
        "urls": [
          "bzz-raw://6bc9394e8ed2a362a1d394df4c7f5cf46b94717e18471f430a75a71cba51cdc6",
          "dweb:/ipfs/QmbNntyRj6WPDNvwpLgj4XUVeissDqPRcPTyn4FSFcFNWo"
        ],
        "license": "MIT"
      },
      "node_modules/solady/src/tokens/ERC1155.sol": {
        "keccak256": "0xc5b0ef62652f917d837aa60462e871d9e22077e5f69bbd63bec1b2eeffbba9a5",
        "urls": [
          "bzz-raw://23ad1a7e43e9c2778d155fcaa6a78bda13532a2dd7aad21936e4298d13732f78",
          "dweb:/ipfs/QmaHEndxhCNa6pD2nosU4GND7Bh9hhA6Painb9DM1mrRm9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/test/SampleERC1155.sol",
    "id": 6071,
    "exportedSymbols": {
      "ERC1155": [
        19982
      ],
      "SampleERC1155": [
        6070
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:335:11",
    "nodes": [
      {
        "id": 6037,
        "nodeType": "PragmaDirective",
        "src": "32:24:11",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 6039,
        "nodeType": "ImportDirective",
        "src": "58:54:11",
        "nodes": [],
        "absolutePath": "node_modules/solady/src/tokens/ERC1155.sol",
        "file": "solady/src/tokens/ERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6071,
        "sourceUnit": 19983,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6038,
              "name": "ERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 19982,
              "src": "66:7:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6070,
        "nodeType": "ContractDefinition",
        "src": "114:253:11",
        "nodes": [
          {
            "id": 6050,
            "nodeType": "FunctionDefinition",
            "src": "152:77:11",
            "nodes": [],
            "body": {
              "id": 6049,
              "nodeType": "Block",
              "src": "227:2:11",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              19238
            ],
            "functionSelector": "0e89341c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "161:3:11",
            "overrides": {
              "id": 6045,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "194:8:11"
            },
            "parameters": {
              "id": 6044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6043,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6050,
                  "src": "165:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "165:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "164:9:11"
            },
            "returnParameters": {
              "id": 6048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6047,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6050,
                  "src": "212:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6046,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "211:15:11"
            },
            "scope": 6070,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 6069,
            "nodeType": "FunctionDefinition",
            "src": "233:132:11",
            "nodes": [],
            "body": {
              "id": 6068,
              "nodeType": "Block",
              "src": "319:46:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6062,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6052,
                        "src": "336:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6063,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6055,
                        "src": "340:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 6064,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6058,
                        "src": "345:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "307830",
                        "id": 6065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "354:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810",
                          "typeString": "literal_string \"0x0\""
                        },
                        "value": "0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810",
                          "typeString": "literal_string \"0x0\""
                        }
                      ],
                      "id": 6061,
                      "name": "_batchMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19517,
                      "src": "325:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 6066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "325:35:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6067,
                  "nodeType": "ExpressionStatement",
                  "src": "325:35:11"
                }
              ]
            },
            "functionSelector": "0ca83480",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchMint",
            "nameLocation": "242:9:11",
            "parameters": {
              "id": 6059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6052,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "260:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6069,
                  "src": "252:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "252:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6055,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "281:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6069,
                  "src": "264:20:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6053,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "264:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6054,
                    "nodeType": "ArrayTypeName",
                    "src": "264:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6058,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "303:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 6069,
                  "src": "286:24:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6056,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "286:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6057,
                    "nodeType": "ArrayTypeName",
                    "src": "286:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "251:60:11"
            },
            "returnParameters": {
              "id": 6060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "319:0:11"
            },
            "scope": 6070,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6040,
              "name": "ERC1155",
              "nameLocations": [
                "140:7:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19982,
              "src": "140:7:11"
            },
            "id": 6041,
            "nodeType": "InheritanceSpecifier",
            "src": "140:7:11"
          }
        ],
        "canonicalName": "SampleERC1155",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6070,
          19982
        ],
        "name": "SampleERC1155",
        "nameLocation": "123:13:11",
        "scope": 6071,
        "usedErrors": [
          19155,
          19158,
          19161,
          19164,
          19167,
          19170
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 11
}